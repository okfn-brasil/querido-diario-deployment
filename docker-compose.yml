# CONTEXT FOR COPILOT: This is the main docker-compose configuration
# for Querido Diário deployment supporting both dev and prod environments.
#
# Key patterns when editing:
# - Use profiles to separate dev/prod services
# - All web services need Traefik labels for routing
# - Development uses local containers, production uses external services
# - Always include health checks for critical services
# - Use ${DOMAIN} interpolation for dynamic routing
# - Ensure environment variables are well documented and defaulted
# - Use volumes for persistent data storage
# - Network segmentation between frontend and backend services
# - Use resource limits for production services
# - Include comments for clarity on configuration choices
# - Keep configurations DRY by using shared environment variables
# - Ensure security best practices (e.g., secrets management, TLS)

---
# Querido Diário Complete Infrastructure
# ======================================
# Base configuration supporting both development and production environments
# Use profiles to control which services run:
#   - Development: docker compose --profile dev up
#   - Production: docker compose --profile prod up
#   - Processing: docker compose --profile processing up

networks:
  backend:
  frontend:
    external: true

volumes:
  redis-data:
    driver: local
  static-files:
    driver: local
  traefik-acme:
    driver: local

services:
  # Redis for caching and Celery
  redis:
    image: redis:7
    container_name: querido-diario-redis
    restart: unless-stopped
    command: redis-server --port 6378
    volumes:
      - redis-data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -p 6378 ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Apache Tika Server for text extraction
  apache-tika:
    image: ghcr.io/okfn-brasil/querido-diario-apache-tika-server:${APACHE_TIKA_IMAGE_TAG:-latest}
    container_name: querido-diario-tika
    restart: unless-stopped
    command: java -jar /tika-server.jar
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9998/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Querido Diário API
  api:
    image: ghcr.io/okfn-brasil/querido-diario-api:${API_IMAGE_TAG:-latest}
    container_name: querido-diario-api
    restart: unless-stopped
    environment:
      # Logging Configuration
      LOG_LEVEL: ${API_LOG_LEVEL:-INFO}

      # OpenSearch Configuration
      QUERIDO_DIARIO_OPENSEARCH_HOST: ${QUERIDO_DIARIO_OPENSEARCH_HOST:-http://opensearch:9200}
      QUERIDO_DIARIO_OPENSEARCH_PASSWORD: ${QUERIDO_DIARIO_OPENSEARCH_PASSWORD:-admin}
      QUERIDO_DIARIO_OPENSEARCH_USER: ${QUERIDO_DIARIO_OPENSEARCH_USER:-admin}
      GAZETTE_OPENSEARCH_INDEX: ${QUERIDO_DIARIO_OPENSEARCH_INDEX:-querido-diario}

      # Database - Companies
      POSTGRES_COMPANIES_DB: ${POSTGRES_COMPANIES_DB:-companies}
      POSTGRES_COMPANIES_HOST: ${POSTGRES_COMPANIES_HOST:-postgres}
      POSTGRES_COMPANIES_PASSWORD: ${POSTGRES_COMPANIES_PASSWORD:-admin}
      POSTGRES_COMPANIES_PORT: ${POSTGRES_COMPANIES_PORT:-5432}
      POSTGRES_COMPANIES_USER: ${POSTGRES_COMPANIES_USER:-admin}

      # Database - Aggregates
      POSTGRES_AGGREGATES_DB: ${QD_DATA_DB_NAME:-queridodiario}
      POSTGRES_AGGREGATES_HOST: ${QD_DATA_DB_HOST:-postgres}
      POSTGRES_AGGREGATES_PASSWORD: ${QD_DATA_DB_PASSWORD:-admin}
      POSTGRES_AGGREGATES_PORT: ${QD_DATA_DB_PORT:-5432}
      POSTGRES_AGGREGATES_USER: ${QD_DATA_DB_USER:-admin}

      # File Storage
      QUERIDO_DIARIO_FILES_ENDPOINT: ${QUERIDO_DIARIO_FILES_ENDPOINT:-${STORAGE_ENDPOINT:-http://minio:9000}/${STORAGE_BUCKET:-queridodiariobucket}/}

      # Static Data Files
      CITY_DATABASE_CSV: ${CITY_DATABASE_CSV:-censo.csv}
      THEMES_DATABASE_JSON: ${THEMES_DATABASE_JSON:-themes_config.json}

      # Email Configuration (Suggestions)
      QUERIDO_DIARIO_SUGGESTION_MAILJET_CUSTOM_ID: ${MAILJET_CUSTOM_ID:-}
      QUERIDO_DIARIO_SUGGESTION_MAILJET_REST_API_KEY: ${MAILJET_API_KEY:-}
      QUERIDO_DIARIO_SUGGESTION_MAILJET_REST_API_SECRET: ${MAILJET_SECRET_KEY:-}
      QUERIDO_DIARIO_SUGGESTION_RECIPIENT_EMAIL: ${QUERIDO_DIARIO_SUGGESTION_RECIPIENT_EMAIL:-}
      QUERIDO_DIARIO_SUGGESTION_RECIPIENT_NAME: ${QUERIDO_DIARIO_SUGGESTION_RECIPIENT_NAME:-Contato Querido Diário}
      QUERIDO_DIARIO_SUGGESTION_SENDER_EMAIL: ${DEFAULT_FROM_EMAIL:-}
      QUERIDO_DIARIO_SUGGESTION_SENDER_NAME: ${QUERIDO_DIARIO_SUGGESTION_SENDER_NAME:-Contato Querido Diário}

      # Field Configuration
      GAZETTE_CONTENT_EXACT_FIELD_SUFFIX: ${GAZETTE_CONTENT_EXACT_FIELD_SUFFIX:-.exact}
      GAZETTE_CONTENT_FIELD: ${GAZETTE_CONTENT_FIELD:-source_text}
      GAZETTE_PUBLICATION_DATE_FIELD: ${GAZETTE_PUBLICATION_DATE_FIELD:-date}
      GAZETTE_SCRAPED_AT_FIELD: ${GAZETTE_SCRAPED_AT_FIELD:-scraped_at}
      GAZETTE_TERRITORY_ID_FIELD: ${GAZETTE_TERRITORY_ID_FIELD:-territory_id}

      # Themed Excerpts Configuration
      THEMED_EXCERPT_CONTENT_EXACT_FIELD_SUFFIX: ${THEMED_EXCERPT_CONTENT_EXACT_FIELD_SUFFIX:-.exact}
      THEMED_EXCERPT_CONTENT_FIELD: ${THEMED_EXCERPT_CONTENT_FIELD:-excerpt}
      THEMED_EXCERPT_EMBEDDING_SCORE_FIELD: ${THEMED_EXCERPT_EMBEDDING_SCORE_FIELD:-excerpt_embedding_score}
      THEMED_EXCERPT_ENTITIES_FIELD: ${THEMED_EXCERPT_ENTITIES_FIELD:-excerpt_entities}
      THEMED_EXCERPT_FRAGMENT_SIZE: ${THEMED_EXCERPT_FRAGMENT_SIZE:-10000}
      THEMED_EXCERPT_NUMBER_OF_FRAGMENTS: ${THEMED_EXCERPT_NUMBER_OF_FRAGMENTS:-1}
      THEMED_EXCERPT_PUBLICATION_DATE_FIELD: ${THEMED_EXCERPT_PUBLICATION_DATE_FIELD:-source_date}
      THEMED_EXCERPT_SCRAPED_AT_FIELD: ${THEMED_EXCERPT_SCRAPED_AT_FIELD:-source_scraped_at}
      THEMED_EXCERPT_SUBTHEMES_FIELD: ${THEMED_EXCERPT_SUBTHEMES_FIELD:-excerpt_subthemes}
      THEMED_EXCERPT_TERRITORY_ID_FIELD: ${THEMED_EXCERPT_TERRITORY_ID_FIELD:-source_territory_id}
      THEMED_EXCERPT_TFIDF_SCORE_FIELD: ${THEMED_EXCERPT_TFIDF_SCORE_FIELD:-excerpt_tfidf_score}

      # API Configuration
      QUERIDO_DIARIO_API_ROOT_PATH: ${QUERIDO_DIARIO_API_ROOT_PATH:-/api}

      # CORS Configuration
      # TODO: Revisar CORS no futuro
      QUERIDO_DIARIO_CORS_ALLOW_CREDENTIALS: ${QUERIDO_DIARIO_CORS_ALLOW_CREDENTIALS:-True}
      QUERIDO_DIARIO_CORS_ALLOW_HEADERS: ${QUERIDO_DIARIO_CORS_ALLOW_HEADERS:-*}
      QUERIDO_DIARIO_CORS_ALLOW_METHODS: ${QUERIDO_DIARIO_CORS_ALLOW_METHODS:-*}
      QUERIDO_DIARIO_CORS_ALLOW_ORIGINS: ${QUERIDO_DIARIO_CORS_ALLOW_ORIGINS:-*}
    networks:
      - frontend
      - backend
    labels:
      - "traefik.enable=true"

      # Roteamento de subdomínio da API (api.dominio)
      - "traefik.http.routers.querido-diario-api.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.querido-diario-api.entrypoints=web,websecure"
      - "traefik.http.routers.querido-diario-api.tls.certresolver=${CERT_RESOLVER:-leresolver}"
      - "traefik.http.routers.querido-diario-api.middlewares=cors-headers,api-rate-limit,security-headers,compression"
      - "traefik.http.services.querido-diario-api.loadbalancer.server.port=8080"

      # Roteamento de caminho da API no domínio principal (/api/* no domínio principal)
      - "traefik.http.routers.querido-diario-api-path.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.querido-diario-api-path.entrypoints=web,websecure"
      - "traefik.http.routers.querido-diario-api-path.tls.certresolver=${CERT_RESOLVER:-leresolver}"
      - "traefik.http.routers.querido-diario-api-path.middlewares=cors-headers,api-rate-limit,security-headers,compression"
      - "traefik.http.routers.querido-diario-api-path.service=querido-diario-api"
      - "traefik.http.routers.querido-diario-api-path.priority=100"

      - "traefik.docker.network=frontend"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: ${API_MEMORY_LIMIT:-1G}
        reservations:
          memory: ${API_MEMORY_RESERVATION:-512M}

  # Querido Diário Backend (Django)
  backend:
    image: ghcr.io/okfn-brasil/querido-diario-backend:${BACKEND_IMAGE_TAG:-latest}
    container_name: querido-diario-backend
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    environment:
      # Core Django Configuration
      QD_BACKEND_SECRET_KEY: ${QD_BACKEND_SECRET_KEY}
      QD_BACKEND_DEBUG: ${QD_BACKEND_DEBUG:-False}
      QD_BACKEND_ALLOWED_HOSTS: ${QD_BACKEND_ALLOWED_HOSTS:-backend-api.${DOMAIN}}

      # Validar
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.settings}

      # Database Configuration
      QD_BACKEND_DB_URL: postgres://${QD_BACKEND_DB_USER:-admin}:${QD_BACKEND_DB_PASSWORD:-admin}@${QD_BACKEND_DB_HOST:-postgres}:${QD_BACKEND_DB_PORT:-5432}/${QD_BACKEND_DB_NAME:-backend}

      # CORS Configuration
      QD_BACKEND_ALLOWED_ORIGINS: ${QD_BACKEND_ALLOWED_ORIGINS:-https://${DOMAIN}}
      QD_BACKEND_ALLOWED_ORIGIN_REGEXES: ${QD_BACKEND_ALLOWED_ORIGIN_REGEXES:-}
      QD_BACKEND_CSRF_TRUSTED_ORIGINS: ${QD_BACKEND_CSRF_TRUSTED_ORIGINS:-https://backend-api.${DOMAIN}}

      # API Configuration
      QD_API_THEME: ${QD_API_THEME:-Tecnologias%20na%20Educação}
      QD_API_URL: ${QD_API_URL:-https://api.${DOMAIN}}

      # Celery Configuration
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6378}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6378}

      # Email Configuration
      MAILJET_API_KEY: ${MAILJET_API_KEY:-}
      MAILJET_SECRET_KEY: ${MAILJET_SECRET_KEY:-}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL:-noreply@example.com}
      SERVER_EMAIL: ${SERVER_EMAIL:-server@example.com}
      QUOTATION_TO_EMAIL: ${QUOTATION_TO_EMAIL:-quotes@example.com}

      # Frontend Configuration
      STATIC_URL: ${STATIC_URL:-https://backend-api.${DOMAIN}/api/static/}
      FRONT_BASE_URL: ${FRONT_BASE_URL:-https://${DOMAIN}}

      # Application Configuration
      PROJECT_TITLE: ${PROJECT_TITLE:-Querido Diário}
      ALERT_HOUR: ${ALERT_HOUR:-8}
      ALERT_MINUTE: ${ALERT_MINUTE:-0}
    volumes:
      - static-files:/opt/app/static
    networks:
      - frontend
      - backend
    labels:
      - "traefik.enable=true"

      # Roteamento de subdomínio do Backend (backend-api.dominio)
      - "traefik.http.routers.querido-diario-backend.rule=Host(`backend-api.${DOMAIN}`)"
      - "traefik.http.routers.querido-diario-backend.entrypoints=web,websecure"
      - "traefik.http.routers.querido-diario-backend.tls.certresolver=${CERT_RESOLVER:-leresolver}"
      - "traefik.http.routers.querido-diario-backend.middlewares=cors-headers,api-rate-limit,security-headers,compression"
      - "traefik.http.services.querido-diario-backend.loadbalancer.server.port=8000"

      - "traefik.docker.network=frontend"
    command: gunicorn config.wsgi:application -w 2 -b :8000 --log-level info
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: ${BACKEND_MEMORY_LIMIT:-1G}
        reservations:
          memory: ${BACKEND_MEMORY_RESERVATION:-512M}

  # Celery Beat (Scheduler)
  celery-beat:
    image: ghcr.io/okfn-brasil/querido-diario-backend:${BACKEND_IMAGE_TAG:-latest}
    container_name: querido-diario-celery-beat
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=false"
    environment:
      # Core Django Configuration
      QD_BACKEND_SECRET_KEY: ${QD_BACKEND_SECRET_KEY}
      QD_BACKEND_DEBUG: ${QD_BACKEND_DEBUG:-False}
      QD_BACKEND_ALLOWED_HOSTS: ${QD_BACKEND_ALLOWED_HOSTS:-backend-api.${DOMAIN}}

      # Validar
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.settings}

      # Database Configuration
      QD_BACKEND_DB_URL: postgres://${QD_BACKEND_DB_USER:-admin}:${QD_BACKEND_DB_PASSWORD:-admin}@${QD_BACKEND_DB_HOST:-postgres}:${QD_BACKEND_DB_PORT:-5432}/${QD_BACKEND_DB_NAME:-backend}

      # CORS Configuration
      QD_BACKEND_ALLOWED_ORIGINS: ${QD_BACKEND_ALLOWED_ORIGINS:-https://${DOMAIN}}
      QD_BACKEND_ALLOWED_ORIGIN_REGEXES: ${QD_BACKEND_ALLOWED_ORIGIN_REGEXES:-}
      QD_BACKEND_CSRF_TRUSTED_ORIGINS: ${QD_BACKEND_CSRF_TRUSTED_ORIGINS:-https://backend-api.${DOMAIN}}

      # API Configuration
      QD_API_THEME: ${QD_API_THEME:-Tecnologias%20na%20Educação}
      QD_API_URL: ${QD_API_URL:-https://api.${DOMAIN}}

      # Celery Configuration
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6378}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6378}

      # Email Configuration
      MAILJET_API_KEY: ${MAILJET_API_KEY:-}
      MAILJET_SECRET_KEY: ${MAILJET_SECRET_KEY:-}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL:-noreply@example.com}
      SERVER_EMAIL: ${SERVER_EMAIL:-server@example.com}
      QUOTATION_TO_EMAIL: ${QUOTATION_TO_EMAIL:-quotes@example.com}

      # Frontend Configuration
      STATIC_URL: ${STATIC_URL:-https://backend-api.${DOMAIN}/api/static/}
      FRONT_BASE_URL: ${FRONT_BASE_URL:-https://${DOMAIN}}

      # Application Configuration
      PROJECT_TITLE: ${PROJECT_TITLE:-Querido Diário}
      ALERT_HOUR: ${ALERT_HOUR:-8}
      ALERT_MINUTE: ${ALERT_MINUTE:-0}
    networks:
      - backend
    command: celery -A config beat -l INFO

  # Celery Worker
  celery-worker:
    image: ghcr.io/okfn-brasil/querido-diario-backend:${BACKEND_IMAGE_TAG:-latest}
    container_name: querido-diario-celery-worker
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=false"
    environment:
      # Core Django Configuration
      QD_BACKEND_SECRET_KEY: ${QD_BACKEND_SECRET_KEY}
      QD_BACKEND_DEBUG: ${QD_BACKEND_DEBUG:-False}
      QD_BACKEND_ALLOWED_HOSTS: ${QD_BACKEND_ALLOWED_HOSTS:-backend-api.${DOMAIN}}

      # Validar
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.settings}

      # Database Configuration
      QD_BACKEND_DB_URL: postgres://${QD_BACKEND_DB_USER:-admin}:${QD_BACKEND_DB_PASSWORD:-admin}@${QD_BACKEND_DB_HOST:-postgres}:${QD_BACKEND_DB_PORT:-5432}/${QD_BACKEND_DB_NAME:-backend}

      # CORS Configuration
      QD_BACKEND_ALLOWED_ORIGINS: ${QD_BACKEND_ALLOWED_ORIGINS:-https://${DOMAIN}}
      QD_BACKEND_ALLOWED_ORIGIN_REGEXES: ${QD_BACKEND_ALLOWED_ORIGIN_REGEXES:-}
      QD_BACKEND_CSRF_TRUSTED_ORIGINS: ${QD_BACKEND_CSRF_TRUSTED_ORIGINS:-https://backend-api.${DOMAIN}}

      # API Configuration
      QD_API_THEME: ${QD_API_THEME:-Tecnologias%20na%20Educação}
      QD_API_URL: ${QD_API_URL:-https://api.${DOMAIN}}

      # Celery Configuration
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6378}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6378}

      # Email Configuration
      MAILJET_API_KEY: ${MAILJET_API_KEY:-}
      MAILJET_SECRET_KEY: ${MAILJET_SECRET_KEY:-}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL:-noreply@example.com}
      SERVER_EMAIL: ${SERVER_EMAIL:-server@example.com}
      QUOTATION_TO_EMAIL: ${QUOTATION_TO_EMAIL:-quotes@example.com}

      # Frontend Configuration
      STATIC_URL: ${STATIC_URL:-https://backend-api.${DOMAIN}/api/static/}
      FRONT_BASE_URL: ${FRONT_BASE_URL:-https://${DOMAIN}}

      # Application Configuration
      PROJECT_TITLE: ${PROJECT_TITLE:-Querido Diário}
      ALERT_HOUR: ${ALERT_HOUR:-8}
      ALERT_MINUTE: ${ALERT_MINUTE:-0}
    networks:
      - backend
    command: celery -A config worker -l INFO
    deploy:
      replicas: ${CELERY_WORKER_REPLICAS:-1}
      resources:
        limits:
          memory: ${CELERY_WORKER_MEMORY_LIMIT:-1G}
        reservations:
          memory: ${CELERY_WORKER_MEMORY_RESERVATION:-512M}

  # Data Processing Service
  data-processing:
    image: ghcr.io/okfn-brasil/querido-diario-data-processing:${DATA_PROCESSING_IMAGE_TAG:-latest}
    container_name: querido-diario-data-processing
    restart: "no"  # Run on-demand for data processing tasks
    depends_on:
      apache-tika:
        condition: service_healthy
    environment:
      # Text Extraction Configuration
      APACHE_TIKA_SERVER: ${APACHE_TIKA_SERVER:-http://apache-tika:9998}

      # Storage Configuration
      STORAGE_REGION: ${STORAGE_REGION:-us-east-1}
      STORAGE_ENDPOINT: ${STORAGE_ENDPOINT:-http://minio:9000}
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY:-minio-access-key}
      STORAGE_ACCESS_SECRET: ${STORAGE_ACCESS_SECRET:-minio-secret-key}
      STORAGE_BUCKET: ${STORAGE_BUCKET:-queridodiariobucket}

      # Database Configuration
      POSTGRES_DB: ${QD_DATA_DB_NAME:-queridodiario}
      POSTGRES_HOST: ${QD_DATA_DB_HOST:-postgres}
      POSTGRES_PASSWORD: ${QD_DATA_DB_PASSWORD:-admin}
      POSTGRES_PORT: ${QD_DATA_DB_PORT:-5432}
      POSTGRES_USER: ${QD_DATA_DB_USER:-admin}
      DATABASE_RESTORE_FILE: ${DATA_PROCESSING_DATABASE_RESTORE_FILE:-}

      # OpenSearch Configuration
      OPENSEARCH_HOST: ${QUERIDO_DIARIO_OPENSEARCH_HOST:-http://opensearch:9200}
      OPENSEARCH_INDEX: ${QUERIDO_DIARIO_OPENSEARCH_INDEX:-querido-diario}
      OPENSEARCH_USER: ${QUERIDO_DIARIO_OPENSEARCH_USER:-admin}
      OPENSEARCH_PASSWORD: ${QUERIDO_DIARIO_OPENSEARCH_PASSWORD:-admin}

      # File Storage Configuration
      QUERIDO_DIARIO_FILES_ENDPOINT: ${QUERIDO_DIARIO_FILES_ENDPOINT:-${STORAGE_ENDPOINT:-http://minio:9000}/${STORAGE_BUCKET:-queridodiariobucket}/}

      # Processing Configuration
      EXECUTION_MODE: ${EXECUTION_MODE:-ALL}
      DEBUG: ${DEBUG:-0}
    networks:
      - backend
    profiles:
      - processing  # Use docker compose --profile processing up to include this service


  # Docker Compose para Traefik - Reverse Proxy
  #
  # Este arquivo configura o Traefik como reverse proxy para o Querido Diário
  #
  # Uso:
  #   1. Copie este arquivo: cp templates/docker-compose.traefik.example.yml docker-compose.traefik.yml
  #   2. Configure as variáveis de ambiente necessárias
  #   3. Crie a rede frontend: docker network create frontend
  #   4. Execute: docker compose -f docker-compose.traefik.yml up -d
  #
  # Middlewares Disponíveis:
  #   - cors-headers: Headers CORS para APIs
  #   - rate-limit: Limitação de requisições (100 burst, 50 avg/min)
  #   - api-rate-limit: Limitação mais restritiva para APIs (50 burst, 25 avg/min)
  #   - security-headers: Headers de segurança (HSTS, XSS, etc.)
  #   - compression: Compressão gzip/deflate
  #   - redirect-to-https: Redirecionamento HTTP → HTTPS (aplicado automaticamente)
  #
  # Para usar nos serviços, adicione nas labels:
  #   - "traefik.http.routers.SEU-SERVIÇO.middlewares=cors-headers,rate-limit,security-headers"
  #
  # Documentação completa: docs/traefik-setup.md

  traefik:
    image: traefik:v3.5
    container_name: traefik
    restart: unless-stopped

    command:
      # Providers - Docker
      - --providers.docker=true
      # Esta opção desabilita a exposição automática de containers Docker para o Traefik por padrão.
      # Quando definida como false, os containers só serão expostos se explicitamente tiverem a
      # label traefik.enable=true configurada. Isso proporciona melhor segurança ao exigir
      # configuração explícita para cada serviço que deve ser acessível através do Traefik.
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=frontend

      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # SSL Certificates - Let's Encrypt
      - --certificatesresolvers.leresolver.acme.email=${ACME_EMAIL:-admin@queridodiario.ok.org.br}
      - --certificatesresolvers.leresolver.acme.storage=/acme.json
      - --certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web

      # Logging
      - --log.level=${TRAEFIK_LOG_LEVEL:-INFO}
      - --accesslog=true

    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS

    volumes:
      # Socket Docker para descoberta automática
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Persistência dos certificados SSL
      - traefik-acme:/acme.json

    networks:
      - frontend

    labels:
      # Redirecionamento HTTP -> HTTPS para todos os hosts
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # Middlewares Personalizados - Definições Globais
      # Estes middlewares ficam disponíveis para uso em qualquer serviço

      # CORS Headers (Traefik v3 syntax)
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowMethods=GET,POST,OPTIONS,PUT,DELETE"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginList=https://${DOMAIN},https://querido-diario-plataforma.netlify.app"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.cors-headers.headers.accessControlMaxAge=3600"

      # Rate Limiting
      - "traefik.http.middlewares.rate-limit.ratelimit.burst=100"
      - "traefik.http.middlewares.rate-limit.ratelimit.average=50"
      - "traefik.http.middlewares.rate-limit.ratelimit.period=1m"

      # Security Headers
      - "traefik.http.middlewares.security-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.security-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.security-headers.headers.referrerPolicy=strict-origin-when-cross-origin"
      - "traefik.http.middlewares.security-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.security-headers.headers.stsPreload=true"

      # API Rate Limiting (mais restritivo para APIs)
      - "traefik.http.middlewares.api-rate-limit.ratelimit.burst=50"
      - "traefik.http.middlewares.api-rate-limit.ratelimit.average=25"
      - "traefik.http.middlewares.api-rate-limit.ratelimit.period=1m"

      # Compression
      - "traefik.http.middlewares.compression.compress=true"

      # Roteamento do frontend - Site principal para Netlify (substituindo configuração nginx)
      # Isso gerencia o roteamento do domínio principal que era feito anteriormente pelo nginx
      - "traefik.http.routers.frontend-main.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend-main.entrypoints=web,websecure"
      - "traefik.http.routers.frontend-main.tls.certresolver=leresolver"
      - "traefik.http.routers.frontend-main.middlewares=security-headers,compression"
      - "traefik.http.routers.frontend-main.service=frontend-netlify"
      - "traefik.http.routers.frontend-main.priority=1"
      - "traefik.http.services.frontend-netlify.loadbalancer.server.url=https://querido-diario-plataforma.netlify.app"

      # Redirecionamento WWW para domínios principais (se usando variantes www)
      - "traefik.http.routers.frontend-www-redirect.rule=Host(`www.${DOMAIN}`)"
      - "traefik.http.routers.frontend-www-redirect.entrypoints=web,websecure"
      - "traefik.http.routers.frontend-www-redirect.tls.certresolver=leresolver"
      - "traefik.http.routers.frontend-www-redirect.middlewares=www-to-non-www"
      - "traefik.http.routers.frontend-www-redirect.priority=10"

      - "traefik.http.middlewares.www-to-non-www.redirectregex.regex=^https://www\\.(.*)"
      - "traefik.http.middlewares.www-to-non-www.redirectregex.replacement=https://$${1}"
      - "traefik.http.middlewares.www-to-non-www.redirectregex.permanent=true"

    environment:
      # Configurações opcionais
      - ACME_EMAIL=${ACME_EMAIL:-admin@queridodiario.ok.org.br}
      - TRAEFIK_LOG_LEVEL=${TRAEFIK_LOG_LEVEL:-INFO}
